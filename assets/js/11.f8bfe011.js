(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{334:function(a,s,t){"use strict";t.r(s);var e=t(33),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("本脚手架包括三大内容：")]),a._v(" "),t("ul",[t("li",[a._v("通用的npm 模块 packages")]),a._v(" "),t("li",[a._v("项目示例 sample")]),a._v(" "),t("li",[a._v("klg-init 模板")])]),a._v(" "),t("h2",{attrs:{id:"开发-packages"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发-packages"}},[a._v("#")]),a._v(" 开发 packages")]),a._v(" "),t("p",[a._v("为了方便用户升级，脚手架提供的特性大部分都会通过 @kalengo/xxx 这样的 npm 模块实现，用户只要模块版本就可以享受新功能。")]),a._v(" "),t("p",[a._v("因为是多模块开发，所以使用 "),t("a",{attrs:{href:"https://github.com/lerna/lerna",target:"_blank",rel:"noopener noreferrer"}},[a._v("lerna"),t("OutboundLink")],1),a._v(" 这个库来帮忙管理和发布模块。")]),a._v(" "),t("p",[a._v("模块都存放在 packages 目录中，lerna 可以有效地帮你处理好模块之间的引入关系。")]),a._v(" "),t("h2",{attrs:{id:"单元测试-todo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单元测试-todo"}},[a._v("#")]),a._v(" 单元测试(TODO)")]),a._v(" "),t("p",[a._v("每个 packages 需要编写单元测试，保证稳定性，执行方法：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n")])])]),t("h2",{attrs:{id:"集成测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集成测试"}},[a._v("#")]),a._v(" 集成测试")]),a._v(" "),t("p",[a._v("所有示例项目都存放在 sample 目录中，我们的每次修改都要保证示例的测试能够通过。")]),a._v(" "),t("p",[a._v("首先，把修改后的 packages build 到 sample 中")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" run build\n")])])]),t("p",[a._v("然后执行集成测试, 这个命令会进入每一个 sample 并执行 "),t("code",[a._v("npm run test:e2e")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" run-tests\n")])])]),t("h2",{attrs:{id:"发布-packages"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布-packages"}},[a._v("#")]),a._v(" 发布 packages")]),a._v(" "),t("p",[a._v("以上测试都通过后，就可以执行发布")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" run publish\n")])])]),t("p",[a._v("选择本次发布对应的版本，lerna 会帮你搞定发布流程。")]),a._v(" "),t("h2",{attrs:{id:"验证-packages"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#验证-packages"}},[a._v("#")]),a._v(" 验证 packages")]),a._v(" "),t("p",[a._v("为了验证 packages 是否可用，我们可以执行以下命令测试")]),a._v(" "),t("p",[a._v("先执行 "),t("code",[a._v("bash upgrade-packages.sh")]),a._v(" 更新 sample 下的 @Kalengo 相关的包")]),a._v(" "),t("p",[a._v("再执行 "),t("code",[a._v("bash run-tests")]),a._v(" 进行验证测试")]),a._v(" "),t("h2",{attrs:{id:"发布脚手架模板"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布脚手架模板"}},[a._v("#")]),a._v(" 发布脚手架模板")]),a._v(" "),t("p",[a._v("我们使用 klg-init 来生成脚手架，该脚手架需要一个模板。")]),a._v(" "),t("p",[a._v("模板存放位置 template/")]),a._v(" "),t("p",[a._v("默认将 hello-world sample 转为模板，把 hello-world 项目更新到最新，使用最新的 npm 包之后。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("gulp move:template\n")])])]),t("p",[a._v("测试模板")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" template\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n")])])]),t("p",[a._v("该命令做了以下事情：")]),a._v(" "),t("ul",[t("li",[a._v("将模板初始化为项目")]),a._v(" "),t("li",[a._v("npm install")]),a._v(" "),t("li",[a._v("npm test")])]),a._v(" "),t("p",[a._v("注意：测试需要连接 mongodb, 修改 template/config/test.js 里的DB配置即可")]),a._v(" "),t("p",[a._v("测试通过就可以发布模板，执行 template/package.json 里的命令")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" run publish\n")])])]),t("p",[a._v("项目模板将会以 npm 模块的形式发布出去, 模块名是 klg-nest-starter ，klg-init 会自动检测到最新模板。")]),a._v(" "),t("p",[a._v("注意：cnpm 同步 npm 仓库会有时延，你可以选择手动同步, 直接访问 https://npm.taobao.org/sync/klg-nest-starter 触发同步")]),a._v(" "),t("h2",{attrs:{id:"更新文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新文档"}},[a._v("#")]),a._v(" 更新文档")]),a._v(" "),t("p",[a._v("本项目的文档使用 "),t("a",{attrs:{href:"https://vuepress.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"}},[a._v("vuepress"),t("OutboundLink")],1),a._v(" , Vue 驱动的静态网站生成器。\n使用 Markdown 编写，排版也非常简单，一键发布到 Github Pages。")]),a._v(" "),t("p",[a._v("执行一下命令，会打开本地文档预览，还会自动刷新。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" run docs:dev\n")])])]),t("p",[a._v("文档编写完成后，执行项目根目录的发布脚本")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" deploy_doc.sh\n")])])]),t("p",[a._v("文档就更新到 Github Pages 了。")])])}),[],!1,null,null,null);s.default=n.exports}}]);